selector_to_html = {"a[href=\"../guides/run-node-windows.html#run-node-windows\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run and manage a node on Windows<a class=\"headerlink\" href=\"#run-and-manage-a-node-on-windows\" title=\"Link to this heading\">#</a></h1><p>This guide describes how you can run and manage a node on the Concordium network from a Windows computer. You can also run a node using <a class=\"reference internal\" href=\"../guides/run-node.html#run-a-node\"><span class=\"std std-ref\">Docker</span></a>, <a class=\"reference internal\" href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"><span class=\"std std-ref\">Ubuntu</span></a>, or <a class=\"reference internal\" href=\"../guides/run-node-macos.html#run-node-macos\"><span class=\"std std-ref\">macOS</span></a>.</p><p>If you want to run a validator node on Windows, see <a class=\"reference internal\" href=\"../guides/baker-windows.html#baker-windows\"><span class=\"std std-ref\">Configure a node on Windows as validator</span></a>.</p>", "a[href=\"#tools\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Tools<a class=\"headerlink\" href=\"#tools\" title=\"Link to this heading\">#</a></h2><h3>Concordium Client<a class=\"headerlink\" href=\"#concordium-client\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../nodes/run-node-ubuntu.html#run-node-ubuntu-testnet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node on a server with Ubuntu on Testnet<a class=\"headerlink\" href=\"#run-a-node-on-a-server-with-ubuntu-on-testnet\" title=\"Link to this heading\">#</a></h1><p>This guide describes how organizations can run a node on the Concordium network from a server and how to set up the node to run as a <a class=\"reference internal\" href=\"../guides/run-node-ubuntu.html#baker-node-ubuntu\"><span class=\"std std-ref\">validator node</span></a>.</p><p>You can also watch the video to learn how to run a node with Ubuntu.</p>", "a[href=\"#bw\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Wallet for Web<a class=\"headerlink\" href=\"#bw\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#cargo-concordium\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cargo-concordium</span></code><a class=\"headerlink\" href=\"#cargo-concordium\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#mw-gen2-for-ios\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Wallet for Mobile for iOS<a class=\"headerlink\" href=\"#mw-gen2-for-ios\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../mobile-wallet-gen2/faq.html#mw-gen2-faq\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Wallet for Mobile FAQ<a class=\"headerlink\" href=\"#mw-gen2-faq\" title=\"Link to this heading\">#</a></h1>", "a[href=\"#wallets\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Wallets<a class=\"headerlink\" href=\"#wallets\" title=\"Link to this heading\">#</a></h2><h3>Concordium Wallet for Mobile for iOS<a class=\"headerlink\" href=\"#mw-gen2-for-ios\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#nodes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Nodes<a class=\"headerlink\" href=\"#nodes\" title=\"Link to this heading\">#</a></h2><h3>Mainnet<a class=\"headerlink\" href=\"#mainnet\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#mw-gen1-for-ios\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Legacy Wallet for iOS<a class=\"headerlink\" href=\"#mw-gen1-for-ios\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#ccdscan\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">CCDScan<a class=\"headerlink\" href=\"#ccdscan\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node on a server with Ubuntu on Mainnet<a class=\"headerlink\" href=\"#run-a-node-on-a-server-with-ubuntu-on-mainnet\" title=\"Link to this heading\">#</a></h1><p>This guide describes how organizations can run a node on the Concordium network from a server and how to set up the node to run as a <a class=\"reference internal\" href=\"#baker-node-ubuntu\"><span class=\"std std-ref\">validator node</span></a>.</p><p>You can also watch the video to learn how to run a node with Ubuntu.</p>", "a[href=\"#testnet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Testnet<a class=\"headerlink\" href=\"#testnet\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#vscode-extension\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">VSCode extension<a class=\"headerlink\" href=\"#vscode-extension\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#concordium-client\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Client<a class=\"headerlink\" href=\"#concordium-client\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../../smart-contracts/guides/integration-test-contract.html#integration-test-contract\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Integration test a contract in Rust<a class=\"headerlink\" href=\"#integration-test-a-contract-in-rust\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to write <em>integration tests</em> in Rust for your smart contracts using the <a class=\"reference external\" href=\"https://docs.rs/concordium-smart-contract-testing/latest/concordium_smart_contract_testing/\">Concordium smart contract testing library</a>.</p>", "a[href=\"#mw-gen2-for-android\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Wallet for Mobile for Android<a class=\"headerlink\" href=\"#mw-gen2-for-android\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#mainnet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Mainnet<a class=\"headerlink\" href=\"#mainnet\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../references/grpc2.html#grpc2-documentation\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">gRPC V2 documentation<a class=\"headerlink\" href=\"#grpc-v2-documentation\" title=\"Link to this heading\">#</a></h1><p>The gRPC v2 API has a much more detailed schema definition, and does not rely on JSON responses as the now deprecated gRPC v1 API did. It also supports streaming responses in cases where there is a lot of data, and supports subscribing to new blocks.</p><p>The V2 interface enables access to the same data as the now deprecated V1 interface, but in addition supports new endpoints, such as the ability to retrieve the entire smart contract state.</p>", "a[href=\"#desktop-wallet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Desktop Wallet<a class=\"headerlink\" href=\"#desktop-wallet\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../guides/run-node.html#run-a-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node with Docker<a class=\"headerlink\" href=\"#run-a-node-with-docker\" title=\"Link to this heading\">#</a></h1><p>In this guide, you learn how to run a node on your Linux computer that\nparticipates in the Concordium network. This means that you receive\nblocks and transactions from other nodes, as well as propagate\ninformation about blocks and transactions to the nodes in the Concordium\nnetwork. After following this guide, you will be able to:</p>", "a[href=\"#concordium-ledger-app\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium LEDGER app<a class=\"headerlink\" href=\"#concordium-ledger-app\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#release-notes\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Release notes<a class=\"headerlink\" href=\"#release-notes\" title=\"Link to this heading\">#</a></h1><h2>Wallets<a class=\"headerlink\" href=\"#wallets\" title=\"Link to this heading\">#</a></h2><h3>Concordium Wallet for Mobile for iOS<a class=\"headerlink\" href=\"#mw-gen2-for-ios\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../../smart-contracts/guides/setup-tools.html#setup-tools\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Install tools for development<a class=\"headerlink\" href=\"#install-tools-for-development\" title=\"Link to this heading\">#</a></h1><p>Before you can start developing smart contracts, you need to setup the\nenvironment.</p><p>You can also watch a video about installing the smart contract tools.</p>", "a[href=\"#smart-contract-deploy-and-initialize-tool\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Smart contract deploy and initialize tool<a class=\"headerlink\" href=\"#smart-contract-deploy-and-initialize-tool\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#mw-gen1-for-android\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Legacy Wallet for Android<a class=\"headerlink\" href=\"#mw-gen1-for-android\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#smart-contract-libraries\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Smart contract Libraries<a class=\"headerlink\" href=\"#smart-contract-libraries\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#libraries\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Libraries<a class=\"headerlink\" href=\"#libraries\" title=\"Link to this heading\">#</a></h2><h3>Smart contract Libraries<a class=\"headerlink\" href=\"#smart-contract-libraries\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../guides/run-node-macos.html#run-node-macos\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run and manage a node on macOS<a class=\"headerlink\" href=\"#run-and-manage-a-node-on-macos\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to run and manage a node on macOS. You can also run a node using <a class=\"reference internal\" href=\"../guides/run-node.html#run-a-node\"><span class=\"std std-ref\">Docker</span></a>, <a class=\"reference internal\" href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"><span class=\"std std-ref\">Ubuntu</span></a>, or <a class=\"reference internal\" href=\"../guides/run-node-windows.html#run-node-windows\"><span class=\"std std-ref\">Windows</span></a>.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

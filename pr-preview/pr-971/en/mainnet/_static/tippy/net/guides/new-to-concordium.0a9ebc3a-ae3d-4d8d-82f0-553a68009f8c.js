selector_to_html = {"a[href=\"../../smart-contracts/tutorials/nft-marketplace/index.html#nft-marketplace-index\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">NFT marketplace smart contract tutorial<a class=\"headerlink\" href=\"#nft-marketplace-smart-contract-tutorial\" title=\"Link to this heading\">#</a></h1><p>In this tutorial you will create an NFT Marketplace. The <a class=\"reference external\" href=\"https://github.com/chainorders/concordium-nft-tutorials\">contract</a> provides some functionalities, such as minting semi-fungible, and non-fungible tokens, buying and selling NFTs with fixed prices, setting commissions for your marketplace, and setting royalties for your NFTs to get some fees from secondary sales in this marketplace. Before you start, it is important to note that this is not a beginner-level tutorial; it does not cover the basics like downloads, node configurations, wallet setup and export, and so on.</p><p>This tutorial will be the first part of the Marketplace. There will be no UI interaction. You will invoke the functions with <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code>. In the end, while implementing a dApp, what you have to do is implement a client that connects your backend with the blockchain. <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> is that client and does that. In the second part which will be released soon, you will implement this marketplace from scratch with an empty React template.</p>", "a[href=\"../mobile-wallet-gen2/setup-mobile-wallet.html#setup-g2-mobile-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Concordium Wallet for Mobile<a class=\"headerlink\" href=\"#set-up-the-mw-gen2\" title=\"Link to this heading\">#</a></h1><p>The Concordium Wallet for Mobile is a digital <a class=\"reference internal\" href=\"../resources/glossary.html#term-Wallet\"><span class=\"xref std std-term\">wallet</span></a> that enables you to create and manage your Concordium\n<a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> and to create transactions such as sending CCD, <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielding\"><span class=\"xref std std-term\">shielding</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Unshielding\"><span class=\"xref std std-term\">unshielding</span></a> CCD,\nand sending <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielded-transfer\"><span class=\"xref std std-term\">shielded transactions</span></a>.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">accounts</span></a>.</p>", "a[href=\"../resources/glossary.html#glossary\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Glossary of Concordium Terms<a class=\"headerlink\" href=\"#glossary-of-concordium-terms\" title=\"Link to this heading\">#</a></h1><p>Also see the Concordium <a class=\"reference external\" href=\"https://go.concordium.com/hubfs/White%20paper%20-%20RWR/Concordium%20White%20Paper%20v1.8.pdf\">whitepaper</a> for more details on the terms described below.</p>", "a[href=\"../nodes/windows.html#windows-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Windows nodes<a class=\"headerlink\" href=\"#windows-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Windows.</p>", "a[href=\"../mobile-wallet/setup-mobile-wallet.html#setup-mobile-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Concordium Legacy Wallet<a class=\"headerlink\" href=\"#set-up-the-mw-gen1\" title=\"Link to this heading\">#</a></h1><p>The Concordium Legacy Wallet is a digital <a class=\"reference internal\" href=\"../resources/glossary.html#term-Wallet\"><span class=\"xref std std-term\">wallet</span></a> that enables you to create and manage your Concordium\n<a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> and to create transactions such as sending CCD, <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielding\"><span class=\"xref std std-term\">shielding</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Unshielding\"><span class=\"xref std std-term\">unshielding</span></a> CCD,\nand sending <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielded-transfer\"><span class=\"xref std std-term\">shielded transactions</span></a>.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">accounts</span></a>.</p>", "a[href=\"../../smart-contracts/guides/setup-contract.html#setup-contract\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up a smart contract project<a class=\"headerlink\" href=\"#set-up-a-smart-contract-project\" title=\"Link to this heading\">#</a></h1><p>This guide documents two different options (<em>from a template</em> or <em>from scratch</em>) to create a new Concordium smart contract project.\nThe <em>from a template</em> option is available for <code class=\"docutils literal notranslate\"><span class=\"pre\">cargo-concordium</span></code> version 2.2.0 or greater. It provides you with some\nsmart contract templates. Choose the template that best fits your project scope.\nThe <em>from scratch</em> option guides you through the process when you want to start a new project without any boilerplate code.</p>", "a[href=\"../snippets/delegation-faq.html#delegation-faq\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Delegation and validation FAQ<a class=\"headerlink\" href=\"#delegation-and-validation-faq\" title=\"Link to this heading\">#</a></h1><h2>For delegators<a class=\"headerlink\" href=\"#for-delegators\" title=\"Link to this heading\">#</a></h2>", "a[href=\"../../smart-contracts/tutorials/nft-minting/index.html#nft-index\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Mint an NFT<a class=\"headerlink\" href=\"#mint-an-nft\" title=\"Link to this heading\">#</a></h1><p>In this tutorial, you are going to mint an NFT on Concordium blockchain. First you will learn the basics to set up your development environment. Note that in this tutorial most of the commands are for UNIX-like systems and will not work on Windows.</p><p>All development is completed using <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> and includes the following examples:</p>", "a[href=\"../../smart-contracts/tutorials/piggy-bank/index.html#piggy-bank\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The piggy bank smart contract<a class=\"headerlink\" href=\"#the-piggy-bank-smart-contract\" title=\"Link to this heading\">#</a></h1><p>In this tutorial, you are going to build a simple smart contract modelling a\npiggy bank.\nIt should allow any account to insert CCD and only the owner to smash it,\ntaking all of the CCD inside.</p><p>In the <a class=\"reference internal\" href=\"../../smart-contracts/tutorials/piggy-bank/writing.html#piggy-bank-writing\"><span class=\"std std-ref\">first part</span></a>, you will learn how to write the very basic piggy bank smart\ncontract using the <a class=\"reference external\" href=\"https://www.rust-lang.org/\">Rust</a> programming language.</p>", "a[href=\"../nodes/ubuntu.html#ubuntu-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Ubuntu nodes<a class=\"headerlink\" href=\"#ubuntu-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Ubuntu.</p>", "a[href=\"../nodes/macos.html#macos-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MacOS nodes<a class=\"headerlink\" href=\"#macos-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with MacOS.</p>", "a[href=\"../nodes/node-requirements.html#node-requirements\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node on Concordium<a class=\"headerlink\" href=\"#run-a-node-on-concordium\" title=\"Link to this heading\">#</a></h1><p>When you run a node on the Concordium blockchain, you are participating in the Concordium blockchain by validating transactions.</p><p>Nodes are required for most things, from using a Concordium wallet to validation. You can choose to run a node yourself or you can have a third-party provider run a node for you. If you choose to run the node yourself, you can\nchoose from four different platforms to run your node: Ubuntu, Windows, MacOS, or Docker/Linux.</p>", "a[href=\"overview-desktop.html#overview-desktop\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Desktop Wallet<a class=\"headerlink\" href=\"#set-up-the-desktop-wallet\" title=\"Link to this heading\">#</a></h1><p>The Concordium Desktop Wallet is a digital wallet that enables you to create and manage your Concordium identities, credentials, and accounts, and to create transactions such as sending CCD, adding a validator, and exporting and importing account information.</p><p>The Desktop Wallet also supports storing of your private keys on a hardware device. Currently, the LEDGER NANO S, LEDGER NANO S Plus, and LEDGER Nano X are supported.</p>", "a[href=\"#getting-started-with-concordium\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Getting started with Concordium<a class=\"headerlink\" href=\"#getting-started-with-concordium\" title=\"Link to this heading\">#</a></h1>", "a[href=\"../concepts/id-accounts.html#reference-id-accounts\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Identities<a class=\"headerlink\" href=\"#reference-id-accounts\" title=\"Link to this heading\">#</a></h1><p>Accounts and identities are strongly linked on the Concordium Platform. To be able to hold, send, or receive <a class=\"reference internal\" href=\"../resources/glossary.html#term-CCD\"><span class=\"xref std std-term\">CCD</span></a> or become a validator on the Concordium blockchain, you need an <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">account</span></a> and an identity. This is regardless of whether you are using the Concordium Legacy Wallet, Concordium Wallet for Mobile, Desktop Wallet, or Concordium Client for your transactions.</p><p>Before you can use the Concordium Platform, an <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity-Provider\"><span class=\"xref std std-term\">identity provider</span></a> must verify and record your real-world identity. This identification is performed when you create your first account.</p>", "a[href=\"how-to-earn.html#how-to-earn\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Staking with Concordium<a class=\"headerlink\" href=\"#staking-with-concordium\" title=\"Link to this heading\">#</a></h1><p>To earn more CCDs, you can stake either as a delegator or validator. There are advantages and disadvantages to both options.</p>", "a[href=\"../../smart-contracts/tutorials/setup-env.html#setup-env\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setup the development environment<a class=\"headerlink\" href=\"#setup-the-development-environment\" title=\"Link to this heading\">#</a></h1><p>Before starting the smart contract tutorials, you must prepare your development environment by installing a number of tools.</p>", "a[href=\"add-delegation.html#add-delegation\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Delegate to a staking pool or passive delegation<a class=\"headerlink\" href=\"#delegate-to-a-staking-pool-or-passive-delegation\" title=\"Link to this heading\">#</a></h1><p>You can delegate stake from an account to a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staking-pool\"><span class=\"xref std std-term\">staking pool</span></a> or to <a class=\"reference internal\" href=\"../resources/glossary.html#term-Passive-delegation\"><span class=\"xref std std-term\">passive delegation</span></a>.</p><p>When you delegate some stake to a staking pool, it can influence the chances of the pool owner of the staking pool being selected to produce a block and receive block rewards and thus delegation rewards to you.</p>", "a[href=\"gallery/index.html#gallery\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The gallery with ID authentication<a class=\"headerlink\" href=\"#the-gallery-with-id-authentication\" title=\"Link to this heading\">#</a></h1><p>In this tutorial, you will learn how to write a gallery which requires the user to prove something using their identity to access the images on the site.\nThe gallery consists of a basic React web front end example that displays the images and communicates with a wallet and a Rust backend that can verify the proofs given by the wallet.</p><p>In the <a class=\"reference internal\" href=\"gallery/gallery-backend.html#gallery-backend\"><span class=\"std std-ref\">first part</span></a>, you will learn how the backend works.</p>", "a[href=\"dapp-examples.html#dapp-examples\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">dApp examples<a class=\"headerlink\" href=\"#dapp-examples\" title=\"Link to this heading\">#</a></h1><p>Select an example to see more information about it, such as a hosted dApp for you to try, links to tutorials, repositories, and more.</p><p>Starting a new project on the Concordium blockchain? Have a look at the <a class=\"reference external\" href=\"https://github.com/Concordium/concordium-dapp-starter\">dApp starter template</a>!</p>", "a[href=\"deciding-wallet.html#choosing-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Deciding between the wallets<a class=\"headerlink\" href=\"#deciding-between-the-wallets\" title=\"Link to this heading\">#</a></h1><h2>Why you need a wallet<a class=\"headerlink\" href=\"#why-you-need-a-wallet\" title=\"Link to this heading\">#</a></h2><p>You need a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Wallet\"><span class=\"xref std std-term\">wallet</span></a> to interact with the Concordium blockchain and to manage your CCD. Currently, there are four first party wallets available: the Concordium Desktop Wallet, the Concordium Wallet for Mobile, Concordium Legacy Wallet, and the Concordium Wallet for Web. This topic outlines the major differences that you should be aware of when you decide which wallet to use.</p><p>The wallets are developed by Concordium Software and can only be used to hold <a class=\"reference internal\" href=\"../resources/glossary.html#term-CCD\"><span class=\"xref std std-term\">CCD</span></a>, the native token of the Concordium blockchain. You can\u2019t use these wallets for any other cryptocurrencies.</p>", "a[href=\"../references/manage-accounts.html#managing-accounts\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Accounts<a class=\"headerlink\" href=\"#accounts\" title=\"Link to this heading\">#</a></h1><p>Accounts and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> are strongly linked on the Concordium Platform. To be able to hold, send, or receive <a class=\"reference internal\" href=\"../resources/glossary.html#term-CCD\"><span class=\"xref std std-term\">CCD</span></a> or become a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validator</span></a> on the Concordium blockchain, you need an account and an identity. This is regardless of whether you are using the Concordium Wallet for Mobile, the Concordium Legacy Wallet, Desktop Wallet, or Concordium Client for your transactions.</p><p>You must have a verified identity and a user identity certificate issued by an authorized <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity-Provider\"><span class=\"xref std std-term\">identity provider</span></a> to create accounts on the Concordium Platform. For more information about identities, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">Identities</span></a>.</p>", "a[href=\"../concepts/concepts-baker.html#baker-concept\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Validators<a class=\"headerlink\" href=\"#validators\" title=\"Link to this heading\">#</a></h1><p>Validation is key to the Concordium blockchain. A <a class=\"reference internal\" href=\"../resources/glossary.html#term-Node\"><span class=\"xref std std-term\">node</span></a> is a validator node when it participates actively in the network by creating new <a class=\"reference internal\" href=\"../resources/glossary.html#term-Block\"><span class=\"xref std std-term\">blocks</span></a> that are added to the chain. The blockchain consists of multiple <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validator</span></a> nodes. A <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validator</span></a> collects, orders, and validates the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Transaction\"><span class=\"xref std std-term\">transactions</span></a> that are included in a block to maintain the integrity of the blockchain. The validators sign each block that they produce so that the block can be verified and executed by the other validators in the network.</p>", "a[href=\"../browser-wallet/setup-browser-wallet.html#setup-browser-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Concordium Wallet for Web<a class=\"headerlink\" href=\"#set-up-the-bw\" title=\"Link to this heading\">#</a></h1><p>The Concordium Wallet for Web is a digital wallet that enables you to create and manage your Concordium\n<a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> and to create transactions, such as sending CCD.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">accounts</span></a>.</p>", "a[href=\"../concepts/concepts-delegation.html#delegation-concept\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Delegation<a class=\"headerlink\" href=\"#delegation\" title=\"Link to this heading\">#</a></h1><p>On the Concordium blockchain, <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validators</span></a> run the protocol that generates blocks, and the action of creating and verifying blocks is an important part of what validators do. Validators are rewarded for every block that they create with a payment of some <a class=\"reference internal\" href=\"../resources/glossary.html#term-CCD\"><span class=\"xref std std-term\">CCD</span></a>. Because Concordium runs a proof-of-stake protocol, each validator needs to <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staked-Amount\"><span class=\"xref std std-term\">stake an amount to produce blocks</span></a>, and the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Lottery-Power\"><span class=\"xref std std-term\">probability of being selected to create the next block</span></a> is proportional to each validator\u2019s stake. So the payment may be seen as an interest on the validator\u2019s capital.</p><p>Not everyone with CCD has the resources needed to run a validator. <a class=\"reference internal\" href=\"../resources/glossary.html#term-Delegator\"><span class=\"xref std std-term\">Delegation</span></a> enables everyone to earn rewards for delegating some stake without the need to run a node or become a validator. Any party with CCD may delegate some of their capital to a validator. This increases the validator\u2019s chance of producing the next block and getting rewards, which are then shared with the delegators. This is a non-custodial solution: when a party delegates an amount of CCD to a validator, the CCDs are not transferred to the validator and remain under the party\u2019s control; they are just considered part of the validator\u2019s stake for the proof-of-stake protocol. Staked CCDs, both for delegators and validators, cannot be spent while staked. Unstaking CCDs is subject to a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Cool-down-period\"><span class=\"xref std std-term\">cool-down period</span></a>.</p>", "a[href=\"../nodes/docker.html#docker-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Docker nodes<a class=\"headerlink\" href=\"#docker-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Docker.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

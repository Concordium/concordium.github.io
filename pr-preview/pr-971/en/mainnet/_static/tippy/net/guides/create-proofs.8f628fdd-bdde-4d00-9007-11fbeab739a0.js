selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Europe_ISO_3166-1.svg/320px-Europe_ISO_3166-1.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>ISO 3166-1 alpha-2</b> codes are two-letter country codes defined in ISO 3166-1, part of the ISO 3166 standard published by the International Organization for Standardization (ISO), to represent countries, dependent territories, and special areas of geographical interest. They are the most widely used of the country codes published by ISO, and are used most prominently for the Internet's country code top-level domains. They are also used as country identifiers extending the postal code when appropriate within the international postal system for paper mail, and have replaced the previous one consisting one-letter codes. They were first included as part of the ISO 3166 standard in its first edition in 1974.</p>", "a[href^=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Europe_ISO_3166-1.svg/320px-Europe_ISO_3166-1.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p><b>ISO 3166-1 alpha-2</b> codes are two-letter country codes defined in ISO 3166-1, part of the ISO 3166 standard published by the International Organization for Standardization (ISO), to represent countries, dependent territories, and special areas of geographical interest. They are the most widely used of the country codes published by ISO, and are used most prominently for the Internet's country code top-level domains. They are also used as country identifiers extending the postal code when appropriate within the international postal system for paper mail, and have replaced the previous one consisting one-letter codes. They were first included as part of the ISO 3166 standard in its first edition in 1974.</p>", "a[href=\"#create-proofs\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Create proofs<a class=\"headerlink\" href=\"#create-proofs\" title=\"Link to this heading\">#</a></h1><p>A <a class=\"reference internal\" href=\"../resources/glossary.html#term-Verifier\"><span class=\"xref std std-term\">verifier</span></a> is a business or use-case that provides a service contingent on the holder providing information about themselves using <a class=\"reference internal\" href=\"../resources/glossary.html#term-Verifiable-credential\"><span class=\"xref std std-term\">verifiable credentials</span></a> or <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account-credential\"><span class=\"xref std std-term\">account credentials</span></a> they have. A verifier will typically consist of two components:</p>", "a[href=\"../resources/glossary.html#term-Membership-proof\"]": "<dt id=\"term-Membership-proof\">Membership proof</dt><dd><p>A proof to determine if an attribute of a user\u2019s identity is included in a given set, for example, lives in the EU. Can also be a <a class=\"reference internal\" href=\"#term-Non-membership-proof\"><span class=\"xref std std-term\">non-membership proof</span></a>.</p></dd>", "a[href=\"#tool-to-verify-credentials\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Tool to verify credentials<a class=\"headerlink\" href=\"#tool-to-verify-credentials\" title=\"Link to this heading\">#</a></h2><p>Concordium has developed a verifier tool which is a self-contained service that handles the retrieval of credentials from the chain, and the cryptographic verification of presentations.\nThe tool is generic and the API exposed is minimal.\nThe verifier has a single POST endpoint and is meant to be used by another service, such as a dApp.</p><p>The response to the request will be status code 200 together with a JSON body that contains the request (i.e., challenge and statement for which the presentation is valid) together with the timestamp and block in which the verification took place. In case of an invalid request the HTTP status code will be in the 4** range, either 404 if credentials cannot be found, or 400 for invalid proofs or otherwise malformed requests.</p>", "a[href=\"#concordium-proof-explorer\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Proof Explorer<a class=\"headerlink\" href=\"#concordium-proof-explorer\" title=\"Link to this heading\">#</a></h2><p>If you want to familiarize yourself with how proofs work and can be constructed, you can use the <a class=\"reference external\" href=\"https://web3id-proof-explorer.testnet.concordium.com/\">Concordium Proof Explorer</a> to create proofs and send them to a Concordium Wallet for Web to see how they interact with account credentials and verifiable credentials. The Concordium Proof Explorer works on Testnet. You can use the <a class=\"reference external\" href=\"https://web3id-issuer-frontend.testnet.concordium.com/\">Web3Id Issuer Front End</a> to create verifiable credential to test with the proof explorer.</p>", "a[href=\"../resources/glossary.html#term-Verifier\"]": "<dt id=\"term-Verifier\">Verifier</dt><dd><p>Party that checks users\u2019 <a class=\"reference internal\" href=\"#term-Verifiable-credential\"><span class=\"xref std std-term\">verifiable credentials</span></a>.</p></dd>", "a[href=\"../resources/glossary.html#term-Verifiable-credential\"]": "<dt id=\"term-Verifiable-credential\">Verifiable credential</dt><dd><p>Issued to the individual by an <a class=\"reference internal\" href=\"#term-Issuer\"><span class=\"xref std std-term\">issuer</span></a> who has authority for the credential to be issued. A verifiable credential contains some information about the individual that does not necessitate <a class=\"reference internal\" href=\"#term-Anonymity-revoker\"><span class=\"xref std std-term\">anonymity revocation</span></a>, such as membership in a club or loyalty program, education, and more. Verifiable credentials can be checked by a <a class=\"reference internal\" href=\"#term-Verifier\"><span class=\"xref std std-term\">verifier</span></a> using <a class=\"reference internal\" href=\"#term-Zero-knowledge-proof\"><span class=\"xref std std-term\">zero-knowledge proofs</span></a>. The issuer can choose to have the verifiable credential expire, or revoke it, if necessary. The issuer manages the verifiable credentials with a smart contract, a credential registry contract.</p></dd>", "a[href=\"#structure-a-membership-proof\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Structure a membership proof<a class=\"headerlink\" href=\"#structure-a-membership-proof\" title=\"Link to this heading\">#</a></h3><p>In the example below, the proof checks that the wallet owner is a citizen of one of the Nordic countries (Finland, Denmark, Sweden, Norway, or Iceland).</p>", "a[href=\"#structure-a-range-proof\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Structure a range proof<a class=\"headerlink\" href=\"#structure-a-range-proof\" title=\"Link to this heading\">#</a></h3><p>In the example below, you see a range proof constructed to check that wallet owner is between 25 and 65 years old (as of 2022-12-12).</p>", "a[href=\"#example-dapp\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Example dApp<a class=\"headerlink\" href=\"#example-dapp\" title=\"Link to this heading\">#</a></h2><p>Concordium provides the following example demo app and repository for inspriation:</p>", "a[href=\"../resources/glossary.html#term-Account-credential\"]": "<dt id=\"term-Account-credential\">Account credential</dt><dd><p>A certificate derived from the <a class=\"reference internal\" href=\"#term-Identity-Object\"><span class=\"xref std std-term\">identity object</span></a> that proves that the owner has been verified by an identity provider. The key feature of the credential is that it <strong>does not</strong> identify the owner to the identity provider, nor to any other single entity, however it contains enough information to allow anonymity revokers in concert with the identity provider to find the owner.</p></dd>", "a[href=\"../resources/glossary.html#term-Statement\"]": "<dt id=\"term-Statement\">Statement</dt><dd><p>A list presented to a wallet by a dApp or service whose items are either attributes to reveal, or properties of attributes to prove.</p></dd>", "a[href=\"../resources/glossary.html#term-Range-proofs\"]": "<dt id=\"term-Range-proofs\">Range proofs</dt><dd><p>A range proof asks a user to prove that they meet an attribute within a range of values. For example, when renting a car, you might need to prove that you are between 25 and 65 years old to the car rental company. This could be constructed as a range proof.</p></dd>", "a[href=\"#membership-proofs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Membership proofs<a class=\"headerlink\" href=\"#membership-proofs\" title=\"Link to this heading\">#</a></h2><p><a class=\"reference internal\" href=\"../resources/glossary.html#term-Membership-proof\"><span class=\"xref std std-term\">Membership proofs</span></a> allow you to present a list of values to the user\u2019s wallet to determine whether the user has one of the required attributes in the list. For example, you might want to know if a user is a resident of the EU. You can present this as a membership proof to be verified by the wallet.</p><p>Relevant attributes for membership proofs are:</p>", "a[href=\"../resources/glossary.html#term-Challenge\"]": "<dt id=\"term-Challenge\">Challenge</dt><dd><p>To make sure that <a class=\"reference internal\" href=\"#term-Zero-knowledge-proof\"><span class=\"xref std std-term\">zero-knowledge proofs</span></a> cannot be reused (e.g., if they are stolen), the verifier can and should specify a challenge string. This can be an arbitrary byte array which is used by the prover (wallet) when producing the proof. The proof will only validate with respect to the challenge that was used to produce it. The verifier server can thus use the challenge to make sure the proofs it is receiving are not reused, and to handle their lifetime (e.g., it can set the challenge it supplied to expire in 5 minutes).</p></dd>", "a[href=\"#asking-a-user-to-reveal-attributes\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Asking a user to reveal attributes<a class=\"headerlink\" href=\"#asking-a-user-to-reveal-attributes\" title=\"Link to this heading\">#</a></h2><p>You can construct a reveal statement in which the wallet owner must consent to reveal one or more specific attributes.</p><p>In the example below, the wallet owner\u2019s country of residence is requested to be revealed.</p>", "a[href=\"gallery/index.html#gallery\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The gallery with ID authentication<a class=\"headerlink\" href=\"#the-gallery-with-id-authentication\" title=\"Link to this heading\">#</a></h1><p>In this tutorial, you will learn how to write a gallery which requires the user to prove something using their identity to access the images on the site.\nThe gallery consists of a basic React web front end example that displays the images and communicates with a wallet and a Rust backend that can verify the proofs given by the wallet.</p><p>In the <a class=\"reference internal\" href=\"gallery/gallery-backend.html#gallery-backend\"><span class=\"std std-ref\">first part</span></a>, you will learn how the backend works.</p>", "a[href=\"../resources/glossary.html#term-Attributes\"]": "<dt id=\"term-Attributes\">Attributes</dt><dd><p>User data, such as date of birth or country of residence, that is associated with a user <a class=\"reference internal\" href=\"#term-Identity\"><span class=\"xref std std-term\">identity</span></a>. Users can choose which attributes should be revealed in each of their accounts.</p></dd>", "a[href=\"#general-rules\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">General rules<a class=\"headerlink\" href=\"#general-rules\" title=\"Link to this heading\">#</a></h2><p>For the dApp or service developer there are some general rules about proofs that you have to follow.</p>", "a[href=\"../resources/glossary.html#term-Zero-knowledge-proof\"]": "<dt id=\"term-Zero-knowledge-proof\">Zero-knowledge proof</dt><dd><p>A method by which a user (the prover) can prove to another party (the verifier) that the user meets a requirement without revealing anything beyond that. Zero knowledge proofs generated by the wallet are non-interactive. They are verifiable forever in the future without further prover interaction.</p></dd>", "a[href=\"../resources/glossary.html#term-Verifiable-presentation\"]": "<dt id=\"term-Verifiable-presentation\">Verifiable presentation</dt><dd><p>Data derived from one or more verifiable credentials and/or account credentials, issued by one or more issuers or identity providers, that is shared with a specific verifier. A verifiable presentation is tamper-evident and encoded in such a way that authorship of the data can be trusted after a process of cryptographic verification. It contains a link that points to the contract and holder ID. A presentation that contains a <strong>zero-knowledge proof</strong> might contain data that confirms the truth of a statement from verifiable credentials or account credentials, but the presentation does not reveal the actual attributes of verifiable credentials.</p></dd>", "a[href=\"#range-proofs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Range proofs<a class=\"headerlink\" href=\"#range-proofs\" title=\"Link to this heading\">#</a></h2><p><a class=\"reference internal\" href=\"../resources/glossary.html#term-Range-proofs\"><span class=\"xref std std-term\">Range proofs</span></a> allow you to present a range of values to the user\u2019s wallet to determine whether the user meets the required attribute. For example, you might want to know if a user over 18 years of age but under 30 years of age. You can present this as a range proof to be verified by the wallet.</p><p>Relevant attributes for range proofs are:</p>", "a[href=\"../resources/glossary.html#term-Non-membership-proof\"]": "<dt id=\"term-Non-membership-proof\">Non-membership proof</dt><dd><p>A proof to determine that an attribute of a user\u2019s identity is <strong>not</strong> included in a set, for example, that they are <strong>not</strong> a resident of a country under trade sanctions.</p></dd>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

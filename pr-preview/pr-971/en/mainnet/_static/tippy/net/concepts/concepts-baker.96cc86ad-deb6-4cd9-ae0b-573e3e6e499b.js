selector_to_html = {"a[href=\"../guides/run-node-windows.html#run-node-windows\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run and manage a node on Windows<a class=\"headerlink\" href=\"#run-and-manage-a-node-on-windows\" title=\"Link to this heading\">#</a></h1><p>This guide describes how you can run and manage a node on the Concordium network from a Windows computer. You can also run a node using <a class=\"reference internal\" href=\"../guides/run-node.html#run-a-node\"><span class=\"std std-ref\">Docker</span></a>, <a class=\"reference internal\" href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"><span class=\"std std-ref\">Ubuntu</span></a>, or <a class=\"reference internal\" href=\"../guides/run-node-macos.html#run-node-macos\"><span class=\"std std-ref\">macOS</span></a>.</p><p>If you want to run a validator node on Windows, see <a class=\"reference internal\" href=\"../guides/baker-windows.html#baker-windows\"><span class=\"std std-ref\">Configure a node on Windows as validator</span></a>.</p>", "a[href=\"../resources/glossary.html#term-Epoch\"]": "<dt id=\"term-Epoch\">Epoch</dt><dd><p>A time period that is approximately one hour on testnet and mainnet. At the start of each epoch, a <a class=\"reference internal\" href=\"#term-Leader-Election\"><span class=\"xref std std-term\">leadership election nonce</span></a> is computed based on the block nonces of the previous epoch. The leadership election nonce is valid for the duration of the epoch. Each epoch has a nominal ending, and when a block is finalized after this nominal ending then epoch transition occurs.</p></dd>", "a[href=\"../resources/glossary.html#term-Lottery-Power\"]": "<dt id=\"term-Lottery-Power\">Lottery Power</dt><dd><p>A validator\u2019s lottery power is its relative stake and is therefore proportional to the <a class=\"reference internal\" href=\"#term-Staked-Amount\"><span class=\"xref std std-term\">staked amount</span></a> of that validator. The lottery power is updated each <a class=\"reference internal\" href=\"#term-Pay-day\"><span class=\"xref std std-term\">pay day</span></a>, and is based on the stake distribution at the end of the epoch before last. (This delay ensures that the stake distribution is determined before the randomness that fixes the validators for the epoch; otherwise, stakeholders might redistribute their stake to luckier validators, which undermines the security of the system.) <a class=\"reference internal\" href=\"#term-Delegator\"><span class=\"xref std std-term\">Delegation</span></a> affects the lottery power of the validator by increasing their stake, thus increasing the odds of that validator being chosen to produce a block.</p></dd>", "a[href=\"../guides/create-account.html#create-account\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Create an account<a class=\"headerlink\" href=\"#create-an-account\" title=\"Link to this heading\">#</a></h1><p>If you are using Concordium Legacy Wallet or Desktop Wallet, when you created your <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identity</span></a>, it came with an <a class=\"reference internal\" href=\"../resources/glossary.html#term-Initial-Account\"><span class=\"xref std std-term\">initial account</span></a>. The initial account is a special account that the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity-Provider\"><span class=\"xref std std-term\">identity provider</span></a> submits\nto the chain. When you already have an identity, you can create more <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> with that identity yourself.</p><p>If you are using Concordium Wallet for Web or Concordium Wallet for Mobile, no initial account was created when you created your <a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identity</span></a>. You create all <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> related to your identities.</p>", "a[href=\"../resources/glossary.html#term-Genesis-Block\"]": "<dt id=\"term-Genesis-Block\">Genesis Block</dt><dd><p>The first <a class=\"reference internal\" href=\"#term-Block\"><span class=\"xref std std-term\">block</span></a> in a <a class=\"reference internal\" href=\"#term-Chain\"><span class=\"xref std std-term\">chain</span></a>. The genesis block establishes the starting state of the chain, before any transactions have occurred.</p></dd>", "a[href=\"../resources/glossary.html#term-Node\"]": "<dt id=\"term-Node\">Node</dt><dd><p>A participant in the Concordium network. Nodes receive blocks and transactions, and track the current state of the blockchain. A <a class=\"reference internal\" href=\"#term-Baker\"><span class=\"xref std std-term\">validator node</span></a> has cryptographic keys that enable it to take part in validation. A node without these keys is referred to as a <em>passive node</em>.</p></dd>", "a[href=\"../mobile-wallet-gen2/setup-mobile-wallet.html#setup-g2-mobile-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Concordium Wallet for Mobile<a class=\"headerlink\" href=\"#set-up-the-mw-gen2\" title=\"Link to this heading\">#</a></h1><p>The Concordium Wallet for Mobile is a digital <a class=\"reference internal\" href=\"../resources/glossary.html#term-Wallet\"><span class=\"xref std std-term\">wallet</span></a> that enables you to create and manage your Concordium\n<a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> and to create transactions such as sending CCD, <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielding\"><span class=\"xref std std-term\">shielding</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Unshielding\"><span class=\"xref std std-term\">unshielding</span></a> CCD,\nand sending <a class=\"reference internal\" href=\"../resources/glossary.html#term-Shielded-transfer\"><span class=\"xref std std-term\">shielded transactions</span></a>.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">accounts</span></a>.</p>", "a[href=\"../resources/glossary.html#term-Cool-down-period\"]": "<dt id=\"term-Cool-down-period\">Cool-down period</dt><dd><p>A period of time during which a transaction is frozen. Examples of when cool-down periods apply include removing a validator and updating stake. The length of a cool-down period varies between transactions.</p></dd>", "a[href=\"../resources/glossary.html#term-Pay-day\"]": "<dt id=\"term-Pay-day\">Pay day</dt><dd><p>A pay day is the point at which new CCDs are minted and rewards to validators and delegators are distributed. The stakes of validators and delegators are updated each pay day (but the changes for each pay day are fixed one epoch before). Pay day is thus when new validators begin validation and updates to delegation and validation take effect, such as increasing stake, restaking preferences, adding delegation. In the case of decreasing stake or removing delegation or validation, there is a longer cool-down period, after which the change is executed at the <strong>next pay day after the cool-down period ends</strong>. The cool-down period is 3 weeks. Pay day is every 24 hours (i.e., 24 epochs) at approximately 09:00 UTC on Mainnet and approximately 12:00 UTC on Testnet. The list of lottery winners that are elected to be the leader for every round in that epoch is established at the beginning of the epoch.</p></dd>", "a[href=\"#validation-with-mw-gen1-and-mw-gen2\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Validation with Concordium Legacy Wallet and Concordium Wallet for Mobile<a class=\"headerlink\" href=\"#validation-with-mw-gen1-and-mw-gen2\" title=\"Link to this heading\">#</a></h3><p>This overview describes the recommended scenario for running a node and becoming a validator on the Concordium blockchain when using Concordium Legacy Wallet or Concordium Wallet for Mobile and running a node.</p>", "a[href=\"../snippets/delegation-faq.html#delegation-faq\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Delegation and validation FAQ<a class=\"headerlink\" href=\"#delegation-and-validation-faq\" title=\"Link to this heading\">#</a></h1><h2>For delegators<a class=\"headerlink\" href=\"#for-delegators\" title=\"Link to this heading\">#</a></h2>", "a[href=\"../resources/glossary.html#term-Quorum-certificate\"]": "<dt id=\"term-Quorum-certificate\">Quorum certificate</dt><dd><p>When the validators sign the block, their collective signatures are aggregated to form a quorum certificate. This quorum certificate is then included in the next block. If the round leader fails to produce a block in the <a class=\"reference internal\" href=\"#term-Round\"><span class=\"xref std std-term\">round</span></a>, or not enough signatures were gathered for a quorum certificate, then the validators will instead send timeout messages, which are aggregated to form a <a class=\"reference internal\" href=\"#term-Timeout-certificate\"><span class=\"xref std std-term\">timeout certificate</span></a>. Each block either contains a quorum certificate or a timeout certificate for the previous round. A block always contains a quorum certificate as it serves as a reference to the parent block. The block might contain a timeout certificate if the previous round timed out. A quorum certificate or a timeout certificate ensures that the protocol progresses. When a node sees a valid quorum certificate or timeout certificate it progresses to the next round.</p></dd>", "a[href=\"#time-concepts\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Time concepts<a class=\"headerlink\" href=\"#time-concepts\" title=\"Link to this heading\">#</a></h2><p>The Concordium blockchain divides time into <a class=\"reference internal\" href=\"../resources/glossary.html#term-Epoch\"><span class=\"xref std std-term\">epochs</span></a>.</p><p>When considering the rewards and other validation-related concepts, the concept of an <em>epoch</em> is used as a unit of time that defines a period in which the set of current validators and stakes are fixed. Epochs have a duration of 1 hour and the duration is fixed at the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Genesis-Block\"><span class=\"xref std std-term\">Genesis block</span></a>. Each epoch has a nominal ending, and when a block is finalized after this nominal ending then epoch transition occurs.</p>", "a[href=\"../mobile-wallet/add-baker-mw.html#add-baker-mw\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Add a validator<a class=\"headerlink\" href=\"#add-a-validator\" title=\"Link to this heading\">#</a></h1><p>Prior to becoming a validator, read <a class=\"reference internal\" href=\"../guides/baker-pool.html#baker-pool\"><span class=\"std std-ref\">Validator management</span></a> to learn about best practices for validators.</p>", "a[href=\"../resources/glossary.html#term-Transaction\"]": "<dt id=\"term-Transaction\">Transaction</dt><dd><p>An atomic operation that defines a change of state in the ledger, such as transferring funds from one account to another. A transaction typically has a sender account and a <a class=\"reference internal\" href=\"#term-Transaction-Sequence-Number\"><span class=\"xref std std-term\">transaction sequence number</span></a>, and incurs a fee. The sender account must sign the transaction to authorize it. (The exception to this is a credential deployment transaction that creates a new account, which does not have a sender account.)</p></dd>", "a[href=\"#validator-keys\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Validator keys<a class=\"headerlink\" href=\"#validator-keys\" title=\"Link to this heading\">#</a></h2><p>A node uses a set of <a class=\"reference internal\" href=\"../resources/glossary.html#term-Private-keys\"><span class=\"xref std std-term\">cryptographic keys</span></a> called validator keys to sign the blocks that it produces. The validator keys are uniquely determined from the associated account. The validator keys are used for signing the block that the node produces and for verifying whether the validator has won the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Lottery-Power\"><span class=\"xref std std-term\">lottery</span></a> as described below. To become a validator node, the node must be configured with a set of validator keys. You generate the validator keys in the wallet when you add validation to an account. The validator node will start validation after the next <a class=\"reference internal\" href=\"../resources/glossary.html#term-Pay-day\"><span class=\"xref std std-term\">pay day</span></a> once the transaction has been approved.</p>", "a[href=\"../references/transactions.html#consensus-show-chain-parameters\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Show chain parameters<a class=\"headerlink\" href=\"#show-chain-parameters\" title=\"Link to this heading\">#</a></h3><p>Use the consensus command <code class=\"docutils literal notranslate\"><span class=\"pre\">show-chain-parameters</span></code> to show a number of parameters for the last known block or a specific block.</p>", "a[href=\"#validator-account\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Validator account<a class=\"headerlink\" href=\"#validator-account\" title=\"Link to this heading\">#</a></h3><p>Each account can use a set of validator keys to register a validator. Whenever a validator produces a valid block that gets included in the chain, a reward is paid to the validator\u2019s account (and the staking pool delegators if they have a pool) at <a class=\"reference internal\" href=\"../resources/glossary.html#term-Pay-day\"><span class=\"xref std std-term\">pay day</span></a>. The reward is derived from transaction fees paid for transactions included in the block and its predecessors, as well as from newly-minted CCDs.</p><p>The account can be viewed in the Desktop Wallet, the Concordium Wallet for Mobile, the Concordium Legacy Wallet, or the Concordium Wallet for Web depending on where the account was created.</p>", "a[href=\"../resources/glossary.html#term-Concordium-Byzantine-Fault-Tolerance-BFT-protocol\"]": "<dt id=\"term-Concordium-Byzantine-Fault-Tolerance-BFT-protocol\">Concordium Byzantine Fault Tolerance (BFT) protocol</dt><dd><p>The consensus protocol for the blockchain. The protocol offers high transaction throughput and lower confirmation time because a block can be produced as soon as the previous block has been signed. The protocol proceeds by rounds. In each round, a predetermined leader among the validators should produce a block. The other validators then sign this block, and their collective signatures are aggregated to form a quorum certificate (QC). This quorum certificate is then included in the next block. If the leader fails to produce a block in the round, or not enough signatures were gathered for a QC, then the validators will instead send timeout messages, which are aggregated to form a timeout certificate (TC). Each block always contains a quorum certificate and may contain a timeout certificate for the previous round if and only if the previous round timed out. When blocks on a common chain in two consecutive rounds have quorum certificates, the block in the first of these rounds (together with its ancestors) is considered final. At this point, the protocol ensures that it cannot be rolled back. The two consecutive blocks must also be within the same epoch.</p></dd>", "a[href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node on a server with Ubuntu on Mainnet<a class=\"headerlink\" href=\"#run-a-node-on-a-server-with-ubuntu-on-mainnet\" title=\"Link to this heading\">#</a></h1><p>This guide describes how organizations can run a node on the Concordium network from a server and how to set up the node to run as a <a class=\"reference internal\" href=\"#baker-node-ubuntu\"><span class=\"std std-ref\">validator node</span></a>.</p><p>You can also watch the video to learn how to run a node with Ubuntu.</p>", "a[href=\"#validators\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Validators<a class=\"headerlink\" href=\"#validators\" title=\"Link to this heading\">#</a></h1><p>Validation is key to the Concordium blockchain. A <a class=\"reference internal\" href=\"../resources/glossary.html#term-Node\"><span class=\"xref std std-term\">node</span></a> is a validator node when it participates actively in the network by creating new <a class=\"reference internal\" href=\"../resources/glossary.html#term-Block\"><span class=\"xref std std-term\">blocks</span></a> that are added to the chain. The blockchain consists of multiple <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validator</span></a> nodes. A <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validator</span></a> collects, orders, and validates the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Transaction\"><span class=\"xref std std-term\">transactions</span></a> that are included in a block to maintain the integrity of the blockchain. The validators sign each block that they produce so that the block can be verified and executed by the other validators in the network.</p>", "a[href=\"../resources/glossary.html#term-Staked-Amount\"]": "<dt id=\"term-Staked-Amount\">Staked Amount</dt><dd><p><a class=\"reference internal\" href=\"#term-Validator\"><span class=\"xref std std-term\">Validators</span></a> can have part of the balance of their account staked. The amount that is staked remains locked while staked and cannot be transferred or moved in any way. The staked amount is proportional to the <a class=\"reference internal\" href=\"#term-Lottery-Power\"><span class=\"xref std std-term\">lottery power</span></a> of a validator.</p><p><a class=\"reference internal\" href=\"#term-Delegator\"><span class=\"xref std std-term\">Delegators</span></a> can delegate stake to a staking pool or passive delegation. This affects the staked amount of the validator and thus their lottery power.</p></dd>", "a[href=\"#tools-to-be-a-validator\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Tools to be a validator<a class=\"headerlink\" href=\"#tools-to-be-a-validator\" title=\"Link to this heading\">#</a></h2><p>Validation is possible with Concordium Wallet for Web, Concordium Wallet for Mobile, Concordium Legacy Wallet, <code class=\"docutils literal notranslate\"><span class=\"pre\">Concordium-client</span></code>, and Desktop Wallet, however the process differs between them. The overviews below give a brief description of the process.</p>", "a[href=\"#overview-of-the-validation-process\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Overview of the validation process<a class=\"headerlink\" href=\"#overview-of-the-validation-process\" title=\"Link to this heading\">#</a></h2><p>If there are no issues, the protocol repeats this process from step 3.</p><p>In the case of a faulty validator who does not produce a block or produces an invalid block, a timeout mechanism handles the process. If Bob does not produce a block within a certain time, a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Timeout-certificate\"><span class=\"xref std std-term\">Timeout Certificate</span></a> (TC) is issued to move the process forward. Alice can now use the TC to skip the previous round and extend an older block for which she has a QC.</p>", "a[href=\"#validation-with-desktop-wallet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Validation with Desktop Wallet<a class=\"headerlink\" href=\"#validation-with-desktop-wallet\" title=\"Link to this heading\">#</a></h3><p>This overview describes the recommended scenario for running a node and becoming a validator on the Concordium blockchain using Desktop Wallet in combination with a LEDGER device to generate validator keys.</p>", "a[href=\"#next-steps\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Next steps<a class=\"headerlink\" href=\"#next-steps\" title=\"Link to this heading\">#</a></h2>", "a[href=\"../guides/baker-windows.html#baker-windows\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a validator node on Windows<a class=\"headerlink\" href=\"#run-a-validator-node-on-windows\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to set up the node to run as a <a class=\"reference internal\" href=\"../concepts/concepts-baker.html#baker-concept\"><span class=\"std std-ref\">validator</span></a> node on a Windows node that participates in the Concordium network. A node receives blocks and transactions from other nodes and propagates information about blocks and transactions to the nodes in the Concordium network. In addition, a validator node also participates in the lottery and produces its own blocks. The validator node will start producing blocks two epochs after the transaction has been approved.</p>", "a[href=\"../resources/glossary.html#term-Round\"]": "<dt id=\"term-Round\">Round</dt><dd><p>Replaces slots in the Concordium BFT protocol. In each round, a predetermined leader among the validators should produce a block. Round leaders are determined each epoch, defined as a fixed time duration. Rounds are an index to a block or timeout. In every round, each validator checks locally whether they won the lottery, which entitles the winner to produce a block in that round. Zero, one, or multiple validators can win the lottery. The probability of these different events is controlled by the difficulty parameter <em>f</em>. For example, with difficulty 0.5 on average every second round will have a lottery winner.</p></dd>", "a[href=\"../resources/glossary.html#term-Winning-probability\"]": "<dt id=\"term-Winning-probability\">Winning probability</dt><dd><p>The winning probability is the probability that a validator wins in a given round. The probability is <span class=\"math notranslate nohighlight\">\\(\\alpha\\)</span>, which equals the validator\u2019s relative stake.</p></dd>", "a[href=\"../nodes/baker-ubuntu.html#baker-ubuntu\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a validator node on Ubuntu<a class=\"headerlink\" href=\"#run-a-validator-node-on-ubuntu\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to set up the node to run as a <a class=\"reference internal\" href=\"../concepts/concepts-baker.html#baker-concept\"><span class=\"std std-ref\">validator</span></a> node on a server that participates in the Concordium network. A node receives blocks and transactions from other nodes and propagates information about blocks and transactions to the nodes in the Concordium network. In addition, a validator node also participates in the lottery and produces its own blocks.</p>", "a[href=\"../nodes/baker-docker.html#baking-docker\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a validator node on Docker<a class=\"headerlink\" href=\"#run-a-validator-node-on-docker\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to set up the node to run as a <a class=\"reference internal\" href=\"../concepts/concepts-baker.html#baker-concept\"><span class=\"std std-ref\">validator</span></a> node on a Docker/Linux node that participates in the Concordium network. A node receives blocks and transactions from other nodes and propagates information about blocks and transactions to the nodes in the Concordium network. In addition, a validator node also participates in the lottery and produces its own blocks.</p>", "a[href=\"../guides/overview-desktop.html#overview-desktop\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Desktop Wallet<a class=\"headerlink\" href=\"#set-up-the-desktop-wallet\" title=\"Link to this heading\">#</a></h1><p>The Concordium Desktop Wallet is a digital wallet that enables you to create and manage your Concordium identities, credentials, and accounts, and to create transactions such as sending CCD, adding a validator, and exporting and importing account information.</p><p>The Desktop Wallet also supports storing of your private keys on a hardware device. Currently, the LEDGER NANO S, LEDGER NANO S Plus, and LEDGER Nano X are supported.</p>", "a[href=\"../guides/create-identity.html#create-initial-account\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Create an identity<a class=\"headerlink\" href=\"#create-an-identity\" title=\"Link to this heading\">#</a></h1><p>Before you can start using a Wallet and submit transactions to the blockchain, you need an identity issued by an identity provider, and, in the case of Concordium Legacy Wallet and Desktop Wallet, an initial account issued by the identity provider. The identity provider submits the initial account to the chain and knows the identity of the owner of the initial account, but not of any other accounts that you create. For Concordium Wallet for Web and Concordium Wallet for Mobile, an initial account is not submitted by the identity provider.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">Identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">Accounts</span></a>.</p>", "a[href=\"../resources/glossary.html#term-Validator\"]": "<dt id=\"term-Validator\">Validator</dt><dd><p>A node that participates in the production of <a class=\"reference internal\" href=\"#term-Block\"><span class=\"xref std std-term\">blocks</span></a>, referred to as <em>validation</em>.</p></dd>", "a[href=\"../resources/glossary.html#term-Staking-pool\"]": "<dt id=\"term-Staking-pool\">Staking pool</dt><dd><p>A validator and delegators that collectively pool their stake to participate in the consensus protocol and earn rewards. The validator runs a validator node on behalf of the staking pool to produce blocks using the collective stake of the pool to determine its lottery power. Rewards are accrued to the pool each time the validator produces a block. Each pay day, the accrued rewards are distributed to the pool\u2019s participants in proportion to their relative stakes in the pool, with the validator (the pool owner) receiving an additional commission from the delegators\u2019 rewards.</p></dd>", "a[href=\"#validation-with-bw\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Validation with Concordium Wallet for Web<a class=\"headerlink\" href=\"#validation-with-bw\" title=\"Link to this heading\">#</a></h3><p>This overview describes the recommended scenario for running a node and becoming a validator on the Concordium blockchain when using Concordium Wallet for Web and running a node.</p>", "a[href=\"../guides/run-node.html#run-a-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node with Docker<a class=\"headerlink\" href=\"#run-a-node-with-docker\" title=\"Link to this heading\">#</a></h1><p>In this guide, you learn how to run a node on your Linux computer that\nparticipates in the Concordium network. This means that you receive\nblocks and transactions from other nodes, as well as propagate\ninformation about blocks and transactions to the nodes in the Concordium\nnetwork. After following this guide, you will be able to:</p>", "a[href=\"../resources/glossary.html#term-Leader-Election\"]": "<dt id=\"term-Leader-Election\">Leader Election</dt><dd><p>In every round a leader is elected among the validators to produce a new block. The leader is chosen by hashing a leader election nonce and the round number, and interpreting the hash as a random number that picks a validator with probability equal to their relative stake. A new leader election nonce is generated every <a class=\"reference internal\" href=\"#term-Epoch\"><span class=\"xref std std-term\">epoch</span></a> by hashing block nonces from the previous epoch. So the sequence of leaders for every epoch is determined at the beginning of the epoch when the leader election nonce is fixed.</p><p>The <a class=\"reference internal\" href=\"#term-Winning-probability\"><span class=\"xref std std-term\">winning probability</span></a> is proportional to the validator\u2019s relative stake.</p><p>See <a class=\"reference internal\" href=\"#term-Lottery-Power\"><span class=\"xref std std-term\">lottery power</span></a>.</p></dd>", "a[href=\"../mobile-wallet/update-baker-mw.html#update-baker-mw\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Change validator options<a class=\"headerlink\" href=\"#change-validator-options\" title=\"Link to this heading\">#</a></h1><p>The following information describes how to access validator settings to update your stake or restaking preference, to open and manage a staking pool, update validator keys, or stop validation for the Concordium Wallet for Web, Concordium Wallet for Mobile, Concordium Legacy Wallet, and Desktop Wallet.</p><p>The steps to get to these settings differ between Concordium Wallet for Mobile and Concordium Legacy Wallet. They are described below.</p>", "a[href=\"#stake-and-lottery\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Stake and lottery<a class=\"headerlink\" href=\"#stake-and-lottery\" title=\"Link to this heading\">#</a></h2><p>A validator needs to <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staked-Amount\"><span class=\"xref std std-term\">stake</span></a> a part of its CCD balance on the validator account. Later, the validator can then manually release a part of or all of the staked amount. The staked amount cannot be moved or transferred until it\u2019s released by the validator.</p>", "a[href=\"../guides/become-baker.html#become-a-baker\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Become a validator using the Concordium Client<a class=\"headerlink\" href=\"#become-a-validator-using-the-concordium-client\" title=\"Link to this heading\">#</a></h1><p>This guide takes you through the steps involved in upgrading your node to a validator node and managing the node using the Concordium Client.</p><p>The process of becoming a validator involves the following:</p>", "a[href=\"../resources/glossary.html#term-Private-keys\"]": "<dt id=\"term-Private-keys\">Private keys</dt><dd><p>A random, secret string that is used in cryptography and cryptocurrency to prove ownership of an account and sign transactions to send, spend, delegate, and stake CCDs. A wallet consists of a set of public addresses and private keys. Anyone can deposit cryptocurrency in a public address, but funds cannot be removed from an address without the corresponding private key.</p></dd>", "a[href=\"../resources/glossary.html#term-Timeout-certificate\"]": "<dt id=\"term-Timeout-certificate\">Timeout certificate</dt><dd><p>If the leader fails to produce a block in the round, or not enough signatures were gathered for a quorum certificate, then the finalizers will instead send timeout messages, which are aggregated to form a timeout certificate. A block always contains a quorum certificate as it serves as a reference to the parent block. The block might contain a timeout certificate if the previous round timed out. A quorum certificate or a timeout certificate ensures that the protocol progresses. When a node sees a valid quorum certificate or timeout certificate it progresses to the next round.</p></dd>", "a[href=\"../browser-wallet/setup-browser-wallet.html#setup-browser-wallet\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Set up the Concordium Wallet for Web<a class=\"headerlink\" href=\"#set-up-the-bw\" title=\"Link to this heading\">#</a></h1><p>The Concordium Wallet for Web is a digital wallet that enables you to create and manage your Concordium\n<a class=\"reference internal\" href=\"../resources/glossary.html#term-Identity\"><span class=\"xref std std-term\">identities</span></a> and <a class=\"reference internal\" href=\"../resources/glossary.html#term-Account\"><span class=\"xref std std-term\">accounts</span></a> and to create transactions, such as sending CCD.</p><p>To learn more about identities and accounts, see <a class=\"reference internal\" href=\"../concepts/id-accounts.html#reference-id-accounts\"><span class=\"std std-ref\">identities</span></a> and <a class=\"reference internal\" href=\"../references/manage-accounts.html#managing-accounts\"><span class=\"std std-ref\">accounts</span></a>.</p>", "a[href=\"../nodes/baker-macos.html#baker-macos\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a validator node on macOS<a class=\"headerlink\" href=\"#run-a-validator-node-on-macos\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to set up the node to run as a <a class=\"reference internal\" href=\"../concepts/concepts-baker.html#baker-concept\"><span class=\"std std-ref\">validator</span></a> node on a macOS node that participates in the Concordium network. A node receives blocks and transactions from other nodes and propagates information about blocks and transactions to the nodes in the Concordium network. In addition, a validator node also participates in the lottery and produces its own blocks.</p>", "a[href=\"concepts-delegation.html#delegation-concept\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Delegation<a class=\"headerlink\" href=\"#delegation\" title=\"Link to this heading\">#</a></h1><p>On the Concordium blockchain, <a class=\"reference internal\" href=\"../resources/glossary.html#term-Validator\"><span class=\"xref std std-term\">validators</span></a> run the protocol that generates blocks, and the action of creating and verifying blocks is an important part of what validators do. Validators are rewarded for every block that they create with a payment of some <a class=\"reference internal\" href=\"../resources/glossary.html#term-CCD\"><span class=\"xref std std-term\">CCD</span></a>. Because Concordium runs a proof-of-stake protocol, each validator needs to <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staked-Amount\"><span class=\"xref std std-term\">stake an amount to produce blocks</span></a>, and the <a class=\"reference internal\" href=\"../resources/glossary.html#term-Lottery-Power\"><span class=\"xref std std-term\">probability of being selected to create the next block</span></a> is proportional to each validator\u2019s stake. So the payment may be seen as an interest on the validator\u2019s capital.</p><p>Not everyone with CCD has the resources needed to run a validator. <a class=\"reference internal\" href=\"../resources/glossary.html#term-Delegator\"><span class=\"xref std std-term\">Delegation</span></a> enables everyone to earn rewards for delegating some stake without the need to run a node or become a validator. Any party with CCD may delegate some of their capital to a validator. This increases the validator\u2019s chance of producing the next block and getting rewards, which are then shared with the delegators. This is a non-custodial solution: when a party delegates an amount of CCD to a validator, the CCDs are not transferred to the validator and remain under the party\u2019s control; they are just considered part of the validator\u2019s stake for the proof-of-stake protocol. Staked CCDs, both for delegators and validators, cannot be spent while staked. Unstaking CCDs is subject to a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Cool-down-period\"><span class=\"xref std std-term\">cool-down period</span></a>.</p>", "a[href=\"#validation-with-concordium-client\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Validation with <code class=\"docutils literal notranslate\"><span class=\"pre\">Concordium-client</span></code><a class=\"headerlink\" href=\"#validation-with-concordium-client\" title=\"Link to this heading\">#</a></h3><p>For information about configuring and managing validation in <code class=\"docutils literal notranslate\"><span class=\"pre\">Concordium-client</span></code>, see <a class=\"reference internal\" href=\"../guides/become-baker.html#become-a-baker\"><span class=\"std std-ref\">Become a validator using the Concordium Client</span></a>.</p>", "a[href=\"../guides/baker-pool.html#baker-pool\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Validator management<a class=\"headerlink\" href=\"#validator-management\" title=\"Link to this heading\">#</a></h1><p>A <a class=\"reference internal\" href=\"../concepts/concepts-baker.html#baker-concept\"><span class=\"std std-ref\">validator</span></a> is a node that participates in the network by producing new blocks that are added to the chain. There are some recommended best practices around validation, particularly when a validator runs a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staking-pool\"><span class=\"xref std std-term\">staking pool</span></a>. A validator can choose to open a staking pool to which others can <a class=\"reference internal\" href=\"../concepts/concepts-delegation.html#delegation-concept\"><span class=\"std std-ref\">delegate</span></a> some of their stake.</p>", "a[href=\"../resources/glossary.html#term-Block\"]": "<dt id=\"term-Block\">Block</dt><dd><p>The basic unit of the blockchain, which is produced by a <a class=\"reference internal\" href=\"#term-Validator\"><span class=\"xref std std-term\">validator</span></a>. A block contains a (possibly empty) list of <a class=\"reference internal\" href=\"#term-Transaction\"><span class=\"xref std std-term\">transactions</span></a>, and has a pointer to a previous block (with the exception of the <a class=\"reference internal\" href=\"#term-Genesis-Block\"><span class=\"xref std std-term\">genesis block</span></a>). A block and its predecessors form a chain, and the sequence of transactions they contain form a ledger. Each block has a <a class=\"reference internal\" href=\"#term-Slot\"><span class=\"xref std std-term\">slot time</span></a> that records when it was produced. A block also contains information relating to consensus, for instance establishing which validator created the block, and that the validator was entitled to do so.</p></dd>", "a[href=\"#when-is-a-block-final\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">When is a block final?<a class=\"headerlink\" href=\"#when-is-a-block-final\" title=\"Link to this heading\">#</a></h2><p>A block is final when it cannot be rolled back any more, i.e., part of the authoritative chain. Validators sign a block when they have verified that it is valid, and their collective signatures are aggregated to form a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Quorum-certificate\"><span class=\"xref std std-term\">quorum certificate</span></a>. This quorum certificate is then included in the next block. When two blocks that are parent-child are in consecutive rounds in the same epoch and both have a quorum certificate, then the block in the first of these rounds (together with its ancestors) is considered final. Why isn\u2019t the child block considered to be final if it has a QC? This is to cover edge cases where network delays cause the QC of a block to not be received by the next block producer before a timeout. In that case, the block gets skipped by the next block producer and it cannot be considered final. To resolve this, only  the first among two consecutive certified blocks is considered to be final.</p><p>A block is final at a minimum of two seconds after its creation. A new block has to be created descended from that block for the new block to be final.</p>", "a[href=\"#staking-pool\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Staking pool<a class=\"headerlink\" href=\"#staking-pool\" title=\"Link to this heading\">#</a></h2><p>You have the option to open a <a class=\"reference internal\" href=\"../resources/glossary.html#term-Staking-pool\"><span class=\"xref std std-term\">staking pool</span></a>. A staking pool allows others who want to earn rewards to do so without the need to run a node or become a validator themselves. To do this they <a class=\"reference internal\" href=\"concepts-delegation.html#delegation-concept\"><span class=\"std std-ref\">delegate</span></a> an amount of stake to your staking pool which then increases your stake and your <a class=\"reference internal\" href=\"../resources/glossary.html#term-Winning-probability\"><span class=\"xref std std-term\">chances of winning the lottery</span></a> to produce a block. You can also choose not to open a pool, in which case only your own stake applies toward the lottery. You can always open a pool later.</p><p>The maximum size of a pool is 5% of all stake in pools (i.e., excluding passive delegation). Any stake above this limit will not contribute towards earning rewards. It isn\u2019t possible to add more stake to exceed the limit, but reward restaking can push it over the limit, or if a lot of other validators unstake and the thresholds change, the staking pool can exceed the limit.</p>", "a[href=\"../guides/run-node-macos.html#run-node-macos\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run and manage a node on macOS<a class=\"headerlink\" href=\"#run-and-manage-a-node-on-macos\" title=\"Link to this heading\">#</a></h1><p>This guide describes how to run and manage a node on macOS. You can also run a node using <a class=\"reference internal\" href=\"../guides/run-node.html#run-a-node\"><span class=\"std std-ref\">Docker</span></a>, <a class=\"reference internal\" href=\"../guides/run-node-ubuntu.html#run-node-ubuntu\"><span class=\"std std-ref\">Ubuntu</span></a>, or <a class=\"reference internal\" href=\"../guides/run-node-windows.html#run-node-windows\"><span class=\"std std-ref\">Windows</span></a>.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

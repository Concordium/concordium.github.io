selector_to_html = {"a[href=\"#submit-a-sponsored-updateoperator-transaction\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Submit a sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code> transaction<a class=\"headerlink\" href=\"#submit-a-sponsored-updateoperator-transaction\" title=\"Link to this heading\">#</a></h2><p>The GIF shows an example of input parameters that can be used to successfully execute a sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code> transaction.\nThe transaction should be successfully submitted by the back end to the blockchain which can be checked on the\nblockchain explorer by clicking the transaction hash displayed at the front end.</p><p>When exploring the code, you will realize that the input parameter to the <code class=\"docutils literal notranslate\"><span class=\"pre\">permit</span></code> function\nand the <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> that is signed in the wallet are rather complex. For example, the <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> for the sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code> transaction is as follows:</p>", "a[href=\"#explore-your-public-key\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Explore your public key<a class=\"headerlink\" href=\"#explore-your-public-key\" title=\"Link to this heading\">#</a></h2><p>You can export your keys file from the Concordium Wallet for Web as follows:</p>", "a[href=\"#schemas\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Schemas<a class=\"headerlink\" href=\"#schemas\" title=\"Link to this heading\">#</a></h2><p>The front end uses several <cite>json</cite> schemas in the <code class=\"docutils literal notranslate\"><span class=\"pre\">./frontend/src/constants.ts</span></code> file such as:</p>", "a[href=\"../wCCD/wCCD-front-end-set-up.html#wccd-front-end-set-up\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setting up the front end<a class=\"headerlink\" href=\"#setting-up-the-front-end\" title=\"Link to this heading\">#</a></h1><p>In this part, you will create a web front end. Users can interact with the smart contract easier\nby using your front end compared to interacting with the node directly.\nNon-tech users might find it inconvenient to interact with smart contracts via the Concordium node\nand some users may choose not to host their own Concordium node locally. This tutorial part will show you\na setup that alleviates the need for the user to host their own Concordium node.</p><p>You can lower the bar for entry by coding an appealing front end that provides additional information\nto your potential customers. Web front ends are a familiar sight nowadays, but to use\nthe front end, users will also need to download a browser wallet as a browser extension.\nThe installation and safe usage of the browser wallet might be new for people using your front end.\nProviding comprehensive explanations and step-by-step guides on your website on topics\nrelated to the browser wallet is important for a good user experience. The browser wallet\nconnects via <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/HTTPS\">HTTPS</a> to a server that is connected to a Concordium node. This setup alleviates the\nneed for the user to host their own Concordium node.</p>", "a[href=\"#submit-a-sponsored-transfer-transaction\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Submit a sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">transfer</span></code> transaction<a class=\"headerlink\" href=\"#submit-a-sponsored-transfer-transaction\" title=\"Link to this heading\">#</a></h2><p>The GIF shows an example of input parameters that can be used to successfully execute a sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">transfer</span></code> transaction.\nThe transaction should be successfully submitted by the back end to the blockchain which can be checked on the\nblockchain explorer by clicking the transaction hash displayed at the front end. You can also check that your <code class=\"docutils literal notranslate\"><span class=\"pre\">to</span></code> account is now the owner of the <code class=\"docutils literal notranslate\"><span class=\"pre\">token_id</span></code>.</p><p>When exploring the code, you will realize that the input parameter to the <code class=\"docutils literal notranslate\"><span class=\"pre\">permit</span></code> function\nand the <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> that is signed in the wallet are rather complex. For example, the <code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code> for the sponsored <code class=\"docutils literal notranslate\"><span class=\"pre\">transfer</span></code> transaction is as follows:</p>", "a[href=\"#sponsored-transactions-front-end-and-back-end\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Sponsored Transactions Front End and Back End<a class=\"headerlink\" href=\"#sponsored-transactions-front-end-and-back-end\" title=\"Link to this heading\">#</a></h1><p>The goal of this part of the tutorial is to set up the front end and the back end locally and to understand the two flows that the dApp provides.</p><p>You can explore the <a class=\"reference external\" href=\"https://sponsored.testnet.concordium.com\">hosted sponsored transaction service</a>.\nThe sponsored transaction service consists of a front end and a back end. You can start your own service by\nfollowing the instructions in the <a class=\"reference external\" href=\"https://github.com/Concordium/concordium-dapp-examples/blob/main/sponsoredTransactions/frontend/README.md\">front end README.md file</a>\nand then the instructions in the <a class=\"reference external\" href=\"https://github.com/Concordium/concordium-dapp-examples/blob/main/sponsoredTransactions/backend/README.md\">back end README.md file</a>.\nAlternatively, follow the steps in the <a class=\"reference external\" href=\"https://github.com/Concordium/concordium-dapp-examples/blob/main/sponsoredTransactions/README.md\">README.md file</a> to deploy the Docker container.\nThe docker container will set up the front end as well as the back end.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

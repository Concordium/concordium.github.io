selector_to_html = {"a[href=\"../../net/guides/export-key.html#export-key\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Export a private key<a class=\"headerlink\" href=\"#export-a-private-key\" title=\"Link to this heading\">#</a></h1><p>In certain situations, such as testing interaction with smart contracts, you may need to export your private key for an account in your wallet. The file format of the key export is specifically for <a class=\"reference internal\" href=\"../../net/references/concordium-client.html#concordium-client-import-accounts-keys\"><span class=\"std std-ref\">import</span></a> to <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code>. If you just copy the key to the clipboard, it\u2019s just the key itself and can be used for other purposes.</p>", "a[href=\"../../net/nodes/macos.html#macos-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">MacOS nodes<a class=\"headerlink\" href=\"#macos-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with MacOS.</p>", "a[href=\"../../net/references/concordium-client.html#concordium-client\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium Client<a class=\"headerlink\" href=\"#concordium-client\" title=\"Link to this heading\">#</a></h1><p>The Concordium distribution ships with a CLI tool named <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code>.</p><p>By default <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> performs its queries and sends transactions\nthrough a <a class=\"reference internal\" href=\"../../net/guides/run-node.html#run-a-node\"><span class=\"std std-ref\">local node</span></a>. If the node runs on a different machine\nor in a custom setup, the options <code class=\"docutils literal notranslate\"><span class=\"pre\">--grpc-ip</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">--grpc-port</span></code> can be used\nto set the <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/IP_address\">IP address</a> and <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Port_(computer_networking)\">port number</a> where the node is accessible. These\nflags are supported by all <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> commands. Note that as of version\n5.1.1, the <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Port_(computer_networking)\">port number</a> must be the port where the GRPC V2 interface is enabled, in contrast to previous versions which required the port number of the V1 API of the Concordium node.</p>", "a[href=\"#run-a-node\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node<a class=\"headerlink\" href=\"#run-a-node\" title=\"Link to this heading\">#</a></h2><p>You will need to run a node. You can run any node platform you wish. You can create an account on your favorite cloud provider to set up your instance unless you intend to run a testnet node locally on your machine. The following are the requirements to run a simple testnet node. See the <a class=\"reference internal\" href=\"../../net/nodes/node-requirements.html#system-requirements-node-mainnet\"><span class=\"std std-ref\">requirements</span></a> for mainnet nodes.</p>", "a[href=\"#sync-your-node\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Sync your node<a class=\"headerlink\" href=\"#sync-your-node\" title=\"Link to this heading\">#</a></h3><p>Start the syncing process of the testnet node by following the guide for your platform <a class=\"reference internal\" href=\"../../net/nodes/ubuntu.html#ubuntu-node\"><span class=\"std std-ref\">Ubuntu</span></a>, <a class=\"reference internal\" href=\"../../net/nodes/docker.html#docker-node\"><span class=\"std std-ref\">Docker</span></a>, <a class=\"reference internal\" href=\"../../net/nodes/windows.html#windows-node\"><span class=\"std std-ref\">Windows</span></a>, or <a class=\"reference internal\" href=\"../../net/nodes/macos.html#macos-node\"><span class=\"std std-ref\">MacOS</span></a>. This step currently takes some time, potentially hours based on your device configuration, because your node is freshly started and needs to recover all the previous blocks.</p><p>You should find your node name on the <a class=\"reference external\" href=\"https://dashboard.testnet.concordium.com/\">Concordium testnet dashboard</a>. It will take less than a day until your testnet node is fully synced. You can observe the syncing process by watching the finalization length of your node. Wait until the <code class=\"docutils literal notranslate\"><span class=\"pre\">Fin</span> <span class=\"pre\">Length</span></code> (finalization length) of your node is the same as the highest value used by the majority of nodes. Once the height value is the same as the height in <a class=\"reference external\" href=\"https://testnet.ccdscan.io/blocks\">CCDScan</a>, then you can continue with the development.</p>", "a[href=\"../../net/nodes/node-requirements.html#system-requirements-node-mainnet\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">System requirements<a class=\"headerlink\" href=\"#system-requirements\" title=\"Link to this heading\">#</a></h3>", "a[href=\"../guides/setup-tools.html#setup-tools\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Install tools for development<a class=\"headerlink\" href=\"#install-tools-for-development\" title=\"Link to this heading\">#</a></h1><p>Before you can start developing smart contracts, you need to setup the\nenvironment.</p><p>You can also watch a video about installing the smart contract tools.</p>", "a[href=\"#install-concordium-client\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Install Concordium Client<a class=\"headerlink\" href=\"#install-concordium-client\" title=\"Link to this heading\">#</a></h2><p>The tutorials use <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> as a command line tool to deploy, mint, and transfer. <a class=\"reference internal\" href=\"../../net/installation/downloads.html#concordium-node-and-client-download-testnet\"><span class=\"std std-ref\">Download it here</span></a>. Rename the package to <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> in case it has some version annotation.</p>", "a[href=\"../../net/installation/downloads.html#cargo-concordium-testnet\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\"><code class=\"docutils literal notranslate\"><span class=\"pre\">cargo-concordium</span></code><a class=\"headerlink\" href=\"#cargo-concordium\" title=\"Link to this heading\">#</a></h2><p>For information about installing <code class=\"docutils literal notranslate\"><span class=\"pre\">cargo-concordium</span></code>, see <a class=\"reference internal\" href=\"../../smart-contracts/guides/setup-tools.html#setup-tools\"><span class=\"std std-ref\">Install tools for development</span></a>.</p>", "a[href=\"#setup-the-development-environment\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setup the development environment<a class=\"headerlink\" href=\"#setup-the-development-environment\" title=\"Link to this heading\">#</a></h1><p>Before starting the smart contract tutorials, you must prepare your development environment by installing a number of tools.</p>", "a[href=\"#setup-a-wallet\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Setup a wallet<a class=\"headerlink\" href=\"#setup-a-wallet\" title=\"Link to this heading\">#</a></h2><p>Now you need a Concordium wallet. Use the Concordium Wallet for Web. The Concordium Wallet for Web uses a 24 word secret recovery phrase to secure your wallet. Make sure to protect your 24 word secret recovery phrase and store it in a secure place. Anyone who knows the secret recovery phrase can access your wallet.</p><p>Use <a class=\"reference external\" href=\"https://chrome.google.com/webstore/detail/concordium-wallet/mnnkpffndmickbiakofclnpoiajlegmg?hl=en-US\">this link</a> to install a Concordium Wallet for Web in a chromium web browser. Follow <a class=\"reference internal\" href=\"../../net/browser-wallet/setup-browser-wallet.html#setup-bw\"><span class=\"std std-ref\">these instructions</span></a> to install the extension. Configure it to run on testnet with an identity created from the Concordium testnet IP (shown below) and an account based on that identity. You don\u2019t have to provide an ID to create an identity on testnet when selecting <code class=\"docutils literal notranslate\"><span class=\"pre\">Concordium</span> <span class=\"pre\">testnet</span> <span class=\"pre\">IP</span></code>. Test identities are meant for testnet testing only.</p>", "a[href=\"../../net/nodes/ubuntu.html#ubuntu-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Ubuntu nodes<a class=\"headerlink\" href=\"#ubuntu-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Ubuntu.</p>", "a[href=\"../../net/guides/run-node.html#run-a-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Run a node with Docker<a class=\"headerlink\" href=\"#run-a-node-with-docker\" title=\"Link to this heading\">#</a></h1><p>In this guide, you learn how to run a node on your Linux computer that\nparticipates in the Concordium network. This means that you receive\nblocks and transactions from other nodes, as well as propagate\ninformation about blocks and transactions to the nodes in the Concordium\nnetwork. After following this guide, you will be able to:</p>", "a[href=\"../../net/nodes/windows.html#windows-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Windows nodes<a class=\"headerlink\" href=\"#windows-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Windows.</p>", "a[href=\"../../net/browser-wallet/setup-browser-wallet.html#setup-bw\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Get started<a class=\"headerlink\" href=\"#get-started\" title=\"Link to this heading\">#</a></h2>", "a[href=\"#import-the-key\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Import the key<a class=\"headerlink\" href=\"#import-the-key\" title=\"Link to this heading\">#</a></h3><p>You are ready to import your key into the <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> configuration. Transfer your wallet key export file to the place where you are running your <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> tool. Navigate to the folder as well.</p><p>Import your key into the <code class=\"docutils literal notranslate\"><span class=\"pre\">concordium-client</span></code> configuration:</p>", "a[href=\"../../net/nodes/docker.html#docker-node\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Docker nodes<a class=\"headerlink\" href=\"#docker-nodes\" title=\"Link to this heading\">#</a></h1><p>This section contains topics that describe running a node with Docker.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

selector_to_html = {"a[href=\"wCCD-introduction.html#wccd-introduction\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Understanding the wCCD smart contract<a class=\"headerlink\" href=\"#understanding-the-wccd-smart-contract\" title=\"Link to this heading\">#</a></h1><p>The native currency on the Concordium blockchain is CCD. When other tokens are\nbuilt on the Concordium blockchain, they often use the recommended <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code>\ntoken standard. This has the advantage that other dApps (decentralized apps)\ncan rely on some basic rules for how to interact with the <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code>\ntokens and on some basic rules for how the apps can retrieve events and data from the <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code> tokens.\nThe native currency CCD has a special purpose in the Concordium\nblockchain network and does not comply with the <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code> token standard.</p>", "a[href=\"wCCD-full-dApp.html#wccd-full-dapp\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Running your first full dApp<a class=\"headerlink\" href=\"#running-your-first-full-dapp\" title=\"Link to this heading\">#</a></h1><p>You are running your own local dApp now. If you want, you can compare it with our\n<a class=\"reference external\" href=\"https://wccd.testnet.concordium.com/\">testnet wCCD dApp</a> hosted on testnet or <a class=\"reference external\" href=\"https://wccd.mainnet.concordium.software/\">mainnet wCCD dApp</a> hosted on mainnet. You can use your Concordium Wallet for Web\nto connect to the dApp.</p>", "a[href=\"#the-wccd-smart-contract\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">The wCCD smart contract<a class=\"headerlink\" href=\"#the-wccd-smart-contract\" title=\"Link to this heading\">#</a></h1><p>In this tutorial, you are going to get familiar with the deployed wCCD token on testnet.\nYou are going to write a basic web front end example that can read from and write to the deployed wCCD smart contract on testnet.</p><p>In the <a class=\"reference internal\" href=\"wCCD-introduction.html#wccd-introduction\"><span class=\"std std-ref\">first part</span></a>, you will learn more about the wCCD token protocol.</p>", "a[href=\"wCCD-interacting.html#wccd-interacting\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Interacting with the wCCD token protocol<a class=\"headerlink\" href=\"#interacting-with-the-wccd-token-protocol\" title=\"Link to this heading\">#</a></h1><h2>Query (non-state-mutative) functions<a class=\"headerlink\" href=\"#query-non-state-mutative-functions\" title=\"Link to this heading\">#</a></h2><p>The protocol has four query functions (<code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tokenMetadata</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">supports</span></code>)\nthat you can invoke on the wCCD contract. Because the <code class=\"docutils literal notranslate\"><span class=\"pre\">schema</span></code> is already embedded,\nthe input parameters can be provided with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--parameter-json</span></code> flag.</p>", "a[href=\"wCCD-front-end-set-up.html#wccd-front-end-set-up\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setting up the front end<a class=\"headerlink\" href=\"#setting-up-the-front-end\" title=\"Link to this heading\">#</a></h1><p>In this part, you will create a web front end. Users can interact with the smart contract easier\nby using your front end compared to interacting with the node directly.\nNon-tech users might find it inconvenient to interact with smart contracts via the Concordium node\nand some users may choose not to host their own Concordium node locally. This tutorial part will show you\na setup that alleviates the need for the user to host their own Concordium node.</p><p>You can lower the bar for entry by coding an appealing front end that provides additional information\nto your potential customers. Web front ends are a familiar sight nowadays, but to use\nthe front end, users will also need to download a browser wallet as a browser extension.\nThe installation and safe usage of the browser wallet might be new for people using your front end.\nProviding comprehensive explanations and step-by-step guides on your website on topics\nrelated to the browser wallet is important for a good user experience. The browser wallet\nconnects via <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/HTTPS\">HTTPS</a> to a server that is connected to a Concordium node. This setup alleviates the\nneed for the user to host their own Concordium node.</p>", "a[href=\"../setup-env.html#setup-env\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setup the development environment<a class=\"headerlink\" href=\"#setup-the-development-environment\" title=\"Link to this heading\">#</a></h1><p>Before starting the smart contract tutorials, you must prepare your development environment by installing a number of tools.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

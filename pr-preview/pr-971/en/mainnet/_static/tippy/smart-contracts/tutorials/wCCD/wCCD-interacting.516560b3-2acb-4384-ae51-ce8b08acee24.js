selector_to_html = {"a[href=\"#query-non-state-mutative-functions\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Query (non-state-mutative) functions<a class=\"headerlink\" href=\"#query-non-state-mutative-functions\" title=\"Link to this heading\">#</a></h2><p>The protocol has four query functions (<code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tokenMetadata</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">supports</span></code>)\nthat you can invoke on the wCCD contract. Because the <code class=\"docutils literal notranslate\"><span class=\"pre\">schema</span></code> is already embedded,\nthe input parameters can be provided with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--parameter-json</span></code> flag.</p>", "a[href=\"#balanceof\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code> function<a class=\"headerlink\" href=\"#the-balanceof-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code> function with the following command.</p>", "a[href=\"#balanceccd\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Getting the CCD balance of an address<a class=\"headerlink\" href=\"#getting-the-ccd-balance-of-an-address\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#the-unwrap-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">unwrap</span></code> function<a class=\"headerlink\" href=\"#the-unwrap-function\" title=\"Link to this heading\">#</a></h3><p>Unwrapping CCD refers to the opposite process of converting the <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code>\ncompliant wCCD token at a 1:1 ratio back to the native currency CCD by burning the\nwCCD token in the wCCD smart contract and getting CCD in return.</p>", "a[href=\"#the-supports-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">supports</span></code> function<a class=\"headerlink\" href=\"#the-supports-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">supports</span></code> function with the following command.</p>", "a[href=\"#interacting-with-the-wccd-token-protocol\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Interacting with the wCCD token protocol<a class=\"headerlink\" href=\"#interacting-with-the-wccd-token-protocol\" title=\"Link to this heading\">#</a></h1><h2>Query (non-state-mutative) functions<a class=\"headerlink\" href=\"#query-non-state-mutative-functions\" title=\"Link to this heading\">#</a></h2><p>The protocol has four query functions (<code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">tokenMetadata</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">supports</span></code>)\nthat you can invoke on the wCCD contract. Because the <code class=\"docutils literal notranslate\"><span class=\"pre\">schema</span></code> is already embedded,\nthe input parameters can be provided with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--parameter-json</span></code> flag.</p>", "a[href=\"#the-updateoperator-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code> function<a class=\"headerlink\" href=\"#the-updateoperator-function\" title=\"Link to this heading\">#</a></h3><p>You can add one or more operator addresses to an address that you control.\nThese operators have access to your wCCD tokens\nat that address and can transfer or unwrap them on your behalf.\nYou should only add operator addresses that you trust. The <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code> function allows you\nto add and remove operators.\nFor example, a smart contract address is often added as an operator so it can\naccess your tokens to perform some smart contract operations\nwithout you having to interact with the smart contract again.</p>", "a[href=\"#state-mutative-functions\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">State-mutative functions<a class=\"headerlink\" href=\"#state-mutative-functions\" title=\"Link to this heading\">#</a></h2><p>The protocol has four state-mutative functions (<code class=\"docutils literal notranslate\"><span class=\"pre\">wrap</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">unwrap</span></code>,\n<code class=\"docutils literal notranslate\"><span class=\"pre\">transfer</span></code>, and <code class=\"docutils literal notranslate\"><span class=\"pre\">updateOperator</span></code>) that you can invoke on the wCCD smart contract.\nBecause the <code class=\"docutils literal notranslate\"><span class=\"pre\">schema</span></code> is already embedded,\nthe input parameters can be provided with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--parameter-json</span></code> flag.</p>", "a[href=\"#the-operatorof-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code> function<a class=\"headerlink\" href=\"#the-operatorof-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code> function with the following command.</p>", "a[href=\"#the-transfer-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">transfer</span></code> function<a class=\"headerlink\" href=\"#the-transfer-function\" title=\"Link to this heading\">#</a></h3><p>You can transfer the wCCD tokens from one address to another address.</p>", "a[href=\"#operatorof\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code> function<a class=\"headerlink\" href=\"#the-operatorof-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">operatorOf</span></code> function with the following command.</p>", "a[href=\"#the-balanceof-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code> function<a class=\"headerlink\" href=\"#the-balanceof-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">balanceOf</span></code> function with the following command.</p>", "a[href=\"../../general/contract-schema.html#contract-schema\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Smart contract schemas<a class=\"headerlink\" href=\"#smart-contract-schemas\" title=\"Link to this heading\">#</a></h1><p>A smart contract schema is a description of how to represent bytes in a more\nstructured representation. It can be used by external tools when displaying the\nreturn value of a receive function and for specifying parameters using a\nstructured representation, such as JSON.</p>", "a[href=\"wCCD-front-end-set-up.html#wccd-front-end-set-up\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setting up the front end<a class=\"headerlink\" href=\"#setting-up-the-front-end\" title=\"Link to this heading\">#</a></h1><p>In this part, you will create a web front end. Users can interact with the smart contract easier\nby using your front end compared to interacting with the node directly.\nNon-tech users might find it inconvenient to interact with smart contracts via the Concordium node\nand some users may choose not to host their own Concordium node locally. This tutorial part will show you\na setup that alleviates the need for the user to host their own Concordium node.</p><p>You can lower the bar for entry by coding an appealing front end that provides additional information\nto your potential customers. Web front ends are a familiar sight nowadays, but to use\nthe front end, users will also need to download a browser wallet as a browser extension.\nThe installation and safe usage of the browser wallet might be new for people using your front end.\nProviding comprehensive explanations and step-by-step guides on your website on topics\nrelated to the browser wallet is important for a good user experience. The browser wallet\nconnects via <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/HTTPS\">HTTPS</a> to a server that is connected to a Concordium node. This setup alleviates the\nneed for the user to host their own Concordium node.</p>", "a[href=\"../setup-env.html#setup-env\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Setup the development environment<a class=\"headerlink\" href=\"#setup-the-development-environment\" title=\"Link to this heading\">#</a></h1><p>Before starting the smart contract tutorials, you must prepare your development environment by installing a number of tools.</p>", "a[href=\"#getting-the-ccd-balance-of-an-address\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Getting the CCD balance of an address<a class=\"headerlink\" href=\"#getting-the-ccd-balance-of-an-address\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#the-wrap-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">wrap</span></code> function<a class=\"headerlink\" href=\"#the-wrap-function\" title=\"Link to this heading\">#</a></h3><p>Wrapping CCD refers to the process of converting the native currency CCD into\na <code class=\"docutils literal notranslate\"><span class=\"pre\">CIS-2</span></code> compliant token (wCCD) at a 1:1 ratio by sending CCD to the wCCD smart\ncontract and getting wCCD in return.\nYou can specify with the <code class=\"docutils literal notranslate\"><span class=\"pre\">--amount</span></code> flag how much CCD you want to wrap.</p><p>Create a <code class=\"docutils literal notranslate\"><span class=\"pre\">wrap.json</span></code> file and insert the JSON object\nfrom option 1 (Receiver is an account) or option 2 (Receiver is a smart contract).</p>", "a[href=\"#the-tokenmetadata-function\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">The <code class=\"docutils literal notranslate\"><span class=\"pre\">tokenMetadata</span></code> function<a class=\"headerlink\" href=\"#the-tokenmetadata-function\" title=\"Link to this heading\">#</a></h3><p>You are ready now to invoke the <code class=\"docutils literal notranslate\"><span class=\"pre\">tokenMetadata</span></code> function with the following command.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};

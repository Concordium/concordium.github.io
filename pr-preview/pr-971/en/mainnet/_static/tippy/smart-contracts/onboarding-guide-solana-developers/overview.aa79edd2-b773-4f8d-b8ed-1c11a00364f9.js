selector_to_html = {"a[href=\"#smart-contracts-and-programs\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Smart contracts and programs<a class=\"headerlink\" href=\"#smart-contracts-and-programs\" title=\"Link to this heading\">#</a></h2><p>Concordium <em>smart contracts</em> serve the same purpose as <em>programs</em> on Solana.\nHowever, some details are different in how these two are structured.</p><p>Solana programs take a list of accounts as input.\nSome of these accounts can be used to store persistent data, that is, data that is stored after the contract invocation is completed.\nConcordium uses smart contract states for that purpose.\nEach contract on Concordium can write to its own state directly.\nModifying the state of other smart contracts is only possible by calling their entrypoints.\nSmart contracts cannot read/write arbitrary data from/to user accounts, but they can transfer CCD they own to any user account and other smart contracts.\nNote that CCD cannot be transferred to the smart contract balance without calling a specific entrypoint or a <a class=\"reference internal\" href=\"../guides/fallback-entrypoints.html#fallback-entrypoints\"><span class=\"std std-ref\">fallback entrypoint</span></a>.\nThe smart contract logic determines whether to accept CCD or not.</p>", "a[href=\"../guides/fallback-entrypoints.html#fallback-entrypoints\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Fallback entrypoints<a class=\"headerlink\" href=\"#fallback-entrypoints\" title=\"Link to this heading\">#</a></h1><p>This guide explains how to use fallback entrypoints, which can be useful\nwhen creating a proxy for your smart contract.</p>", "a[href=\"#concordium\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Concordium<a class=\"headerlink\" href=\"#concordium\" title=\"Link to this heading\">#</a></h3>", "a[href=\"#example\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Example<a class=\"headerlink\" href=\"#example\" title=\"Link to this heading\">#</a></h2><p>This example demonstrates the difference in how the persistent state is handled.</p>", "a[href=\"#onboarding-for-solana-developers\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Onboarding for Solana developers<a class=\"headerlink\" href=\"#onboarding-for-solana-developers\" title=\"Link to this heading\">#</a></h1><p>This overview outlines the main differences of account models and smart contract functionality between Solana and Concordium. <a class=\"reference internal\" href=\"faq.html#solana-faq\"><span class=\"std std-ref\">The FAQ</span></a> answers commonly asked questions.</p>", "a[href=\"#accounts\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Accounts<a class=\"headerlink\" href=\"#accounts\" title=\"Link to this heading\">#</a></h2><p>Solana accounts are somewhat similar to files and can hold arbitrary data.\nSome accounts are marked as <em>executable</em> and contain program code.\nThese accounts themselves are immutable, but programs stored in their data can modify data in accounts they own.</p><p>Concordium, on the other hand, has a strict separation between user accounts and smart contracts.\nBoth accounts and smart contracts have CCD balances associated with them.\nMoreover, smart contracts can have state \u2013 structured data associated with the contract.\nThis data can be updated directly only by the smart contract code it belongs to.\nThe only way of interacting with the contract state from outside is through the interface that the smart contract provides.\nThis interface consists of entrypoints.</p>", "a[href=\"#solana\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">Solana<a class=\"headerlink\" href=\"#solana\" title=\"Link to this heading\">#</a></h3><p>The example code is taken from <a class=\"reference external\" href=\"https://github.com/solana-labs/example-helloworld\">example-helloworld</a> and adjusted.</p>", "a[href=\"faq.html#solana-faq\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">FAQ<a class=\"headerlink\" href=\"#faq\" title=\"Link to this heading\">#</a></h1><p>The following Frequently Asked Questions about Concordium focuses on helping developers with a Solana background to understand the Concordium blockchain and its smart contract ecosystem.</p><p>Feel free to participate and add your questions to the <a class=\"reference external\" href=\"https://support.concordium.software/\">Concordium software support channels</a>.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(` ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
